tabla <-  read.csv("wca.csv")
View(tabla)
autork <- tabla[5,20]
autork <- as.data.frame(tabla[5,20])
View(autork)
autork <- tabla[c(5,20)]
View(autork)
head(autork)
# Cargar el paquete necesario
library(tidyr)
library(dplyr)  # Para manipulación de datos
# Crear un ejemplo de data frame
df <- data.frame(
ID = c(1, 2, 3),
Cita = c("Smith et al. 2020", "Johnson et al. 2018", "Lee et al. 2021"),
Palabras_Clave = c("ecología; biodiversidad; conservación",
"clima; cambio global",
"genética; evolución; adaptación")
)
View(df)
# Separar las palabras clave en múltiples filas
df_separado <- df %>%
separate_rows(Palabras_Clave, sep = ";")
# Ver el resultado
print(df_separado)
View(df_separado)
tabla <-  read.csv("wca.csv")
# Separar las palabras clave en múltiples filas
tabla_separado <- tabla %>%
separate_rows(Author.Keywords, sep = ";")
View(tabla_separado)
tabla <-  read.csv("wca.csv")
# Separar las palabras clave en múltiples filas
tabla_separado <- tabla %>%
separate_rows(Author.Keywords, sep = ";")
nodeseado <- c("meta-analisys", "review", "mangrove", "socio-econimis", "industry", "politics", "economi",
"policy", "Economic analysis", "Economic aspects", "Stakeholder", "Aerial forager", " Financial performance",
" Transaction costs", " Clonal diversity", "clonal",  "Forest products", " Rights-based approach", " Socio-ecological analysis"
" economic analysis", " Community participation", " Forest Policy", " Smallholder farmers", " Urban landscape", "Urban", "urban" )
nodeseado <- c("meta-analisys", "review", "mangrove", "socio-econimis", "industry", "politics", "economi",
"policy", "Economic analysis", "Economic aspects", "Stakeholder", "Aerial forager", " Financial performance",
" Transaction costs", " Clonal diversity", "clonal",  "Forest products", " Rights-based approach", " Socio-ecological analysis",
" economic analysis", " Community participation", " Forest Policy", " Smallholder farmers", " Urban landscape", "Urban", "urban" )
si_deseado <- c("germination", " Functional diversity", "seed", " Seed germination")
t_no <- tabla_separado[tabla_separado$Author.Keywords %in% nodeseado, ]
View(t_no)
t_no <- tabla_separado[tabla_separado$Author.Keywords %in% nodeseado]
t_no <- tabla_separado[tabla_separado$Author.Keywords %in% nodeseado, ]
View(t_no)
View(tabla_separado)
# Cargar el paquete necesario
library(tidyr)
library(dplyr)  # Para manipulación de datos
# cargamos bases de datos
tabla <-  read.csv("wca.csv") # busqueda saul
tabla2 <- read.csv("omar_busqueda.csv")
View(tabla)
View(tabla2)
head(tabla$ISSN)
tabla2 <- read.table("omar_busqueda.txt")
tabla2 <- read.table("omar_busqueda.txt", header = T)
library(rio)
install.packages("rio")
library(rio)
tabla2 <- rio::import("omar_busqueda.txt")
tabla2 <- rio::import("omar_busqueda.txt")
head(tabla$Title)
head(tabla2$TI)
# vamos a filtrar por titulo
conjunto <- tabla[tabla$Title %in% tabla2$TI,]
View(conjunto)
tabla1 <- rio::import("omar_busqueda.txt")
tabla2 <- rio::import("omar_busqueda_2.txt")
View(tabla1)
tabla3 <- rio::import("omar_busqueda_3.txt")
# vamos a filtrar por titulo
repetidos1 <- tabla[tabla$Title %in% tabla1$TI,]
repetidos2 <- tabla[tabla$Title %in% tabla2$TI,]
repetidos3 <- tabla[tabla$Title %in% tabla3$TI,]
conj_rep <- cbind(repetidos1, repetidos2, repetidos3)
conj_rep <- c(repetidos1, repetidos2, repetidos3)
View(conj_rep)
conj_rep <- rbind(repetidos1, repetidos2, repetidos3)
View(conj_rep)
t_no <- tabla_separado[tabla_separado$Author.Keywords == nodeseado]
View(conj_rep)
# Cargar el paquete necesario
library(tidyr)
library(dplyr)  # Para manipulación de datos
library(rio)
##### tituos repetidos ####
# cargamos bases de datos
tabla <-  read.csv("wca.csv") # busqueda saul
tabla1 <- rio::import("regeneracion_501_1000.txt")
View(tabla1)
tabla2 <- rio::import("regeneracion_1001_1500.txt")
tabla3 <- rio::import("regeneracion_1501_1820.txt")
tabla1 <- rio::import("regeneracion_501_1000.txt")
tabla2 <- rio::import("regeneracion_1001_1500.txt")
tabla3 <- rio::import("regeneracion_1501_1820.txt")
tabla1 <- rio::import("regeneracion_501_1000.txt")
tabla1 <- read.delim("regeneracion_501_1000.txt")
??read.delim
tabla1 <- read.delim("regeneracion_501_1000.txt", sep = "\t")
??rio::import
tabla2 <- rio::import("regeneracion_1001_1500.txt", nrows = 500, )
tabla2 <- rio::import("regeneracion_1001_1500.txt", nrows = 500 )
tabla1 <- rio::impor("regeneracion_501_1000.txt", nrows = 500)
tabla1 <- rio::import("regeneracion_501_1000.txt", nrows = 500)
tabla3 <- rio::import("regeneracion_1501_1820.txt", nrows = 500)
tabla1 <- read.table("regeneracion_501_1000.txt")
tabla1 <- read.table("regeneracion_501_1000.txt", header = T )
??read.table
tabla1 <- read.table("regeneracion_501_1000.txt", header = T, sep = "\t")
tabla1 <- read.table2("regeneracion_501_1000.txt", header = T, sep = "\t")
tabla1 <- read_table2("regeneracion_501_1000.txt", header = T, sep = "\t")
tabla1 <- rio::import("regeneracion_501_1000.txt")
tabla2 <- rio::import("regeneracion_1001_1500.txt")
tabla3 <- rio::import("regeneracion_1501_1820.txt")
# los titulos se usaran como filtro
head(tabla$Title)
head(tabla2$TI)
##### tituos repetidos ####
# cargamos bases de datos
tabla <-  read.csv("wca.csv") # busqueda saul
# los titulos se usaran como filtro
head(tabla$Title)
##### tituos repetidos ####
# cargamos bases de datos
tabla <-  rio::import("wca.csv") # busqueda saul
# los titulos se usaran como filtro
head(tabla$Title)
head(tabla2$TI)
# vamos a filtrar por titulo
repetidos1 <- tabla[tabla$Title %in% tabla1$TI,]
repetidos2 <- tabla[tabla$Title %in% tabla2$TI,]
repetidos3 <- tabla[tabla$Title %in% tabla3$TI,]
# ahora tenemos una base de datos con los titulos repetidos en las
# busquedas
conj_rep <- rbind(repetidos1, repetidos2, repetidos3)
##### tituos repetidos ####
# cargamos bases de datos
tabla <-  rio::import("wca.csv") # busqueda saul
tabla1 <- rio::import("omar_busqueda.txt")
tabla2 <- rio::import("omar_busqueda_2.txt")
##### tituos repetidos ####
# cargamos bases de datos
tabla <-  rio::import("wca.csv") # busqueda saul
tabla1 <- rio::import("regeneracion_501_1000.txt")
tabla2 <- rio::import("regeneracion_1001_1500.txt")
tabla3 <- rio::import("regeneracion_1501_1820.txt")
wos_tabla <- rbind(tabla1, tabla2, tabla3)
write.table(wos_tabla, "wos_table.txt", row.names = FALSE, quote = FALSE, sep = "\t")
# este paso es necesario porque wca esta en csv y mo em formato txt UTF-8
tabla$Title <- iconv(tabla$Title, from = "latin1", to = "UTF-8", sub = "byte")
# convertimos todo a minisculas
wos_tabla$TI <- tolower(wos_tabla$TI)
tabla$Title <- tolower(tabla$Title)
# los titulos se usaran como filtro, ahora todos entan en minusculas,
# esto es necesario ya que R toma como cosas diferentes las minusculas y mayusculas
head(tabla$Title)
head(wos_tabla$TI)
#  vemos si no hay titulos repetidos
reps <- tabla %>%
count(Title, sort = T) %>%
filter (n>1)
rep_wos <- wos_tabla %>%
count(TI, sort = T) %>%
filter (n>1)
View(rep_wos)
# vamos a filtrar por titulo entre las bases de datos
# ahora tenemos una base de datos con los titulos repetidos en las
# busquedas
repetidos <- tabla[tabla$Title %in% wos_tabla$TI,]
write.table(repetidos, "repetidos.txt")
View(repetidos)
View(wos_tabla)
repetidos_doi <- tabla[tabla$DOI %in% wos_tabla$DI,]
write.table(repetidos_doi, "repetidos_doi.txt")
dim(repetidos)
dim(repetidos_doi)
View(repetidos_doi)
#  vemos si no hay titulos repetidos dentro de a base de datos
reps <- tabla %>%
count(DOI, sort = T) %>%
filter (n>1)
rep_wos <- wos_tabla %>%
count(DI, sort = T) %>%
filter (n>1)
View(rep_wos)
#  vemos si no hay titulos repetidos dentro de a base de datos
reps <- tabla %>%
count(Title, sort = T) %>%
filter (n>1)
rep_wos <- wos_tabla %>%
count(TI, sort = T) %>%
filter (n>1)
View(repetidos_doi)
# existen filas sin doy, ahora veamos los titulos, esos no estan vacios
doi_titulos <- repetidos_doi[repetidos_doi$Title %in% repetidos$Title,]
dim(doi_titulos)
View(doi_titulos)
View(repetidos)
write.table(repetidos, "repetidos.txt")
colnames(tabla)[colnames(tabla) == "Author Keywords"] <- "Author_Keywords"
tabla_separado <- tabla %>%
separate_rows(Author_Keywords, sep = ";")
tabla_separado$Author_Keywords <- iconv(tabla_separado$Author_Keywords, from = "latin1", to = "UTF-8", sub = "")
tabla_separado$Author_Keywords <- tolower(tabla_separado$Author_Keywords)
View(tabla_separado)
